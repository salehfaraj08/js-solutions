/*****block 1******/
function funcA() {
console.log(a);
כאן יודפס לא מוגדר בגלל ש a עוד לא הוגד ובהעברת שורת זאת לאחר var a = 1 אפשר לתקן את זה
console.log(foo());
כאן יופס 2 כי בצורת הגדרה הזאת של הפונקציה לא משנה מתי קוראים לפונקציה ופונקציה foo מחזירה 2
var a = 1;
function foo() {
return 2;
}
}
funcA();


/*****block 2******/

var fullName = 'John Doe';
var obj = {
    fullName: 'Colin Ihrig',
    prop: {
        fullName: 'Aurelio De Rosa',
        getFullName: function () {
            return this.fullName;
        }
    }
};
console.log(obj.prop.getFullName());

var test = obj.prop.getFullName();
console.log(test); 



console.log(obj.prop.getFullName());
כאן יודפס 'Aurelio De Rosa' כי כי לוקח את הערך הראשון הקרוב 
var test = obj.prop.getFullName;
console.log(test()); 
כאן יודפס undefined כי לא מופעלת הפונקציה ולא מחזירה כלום וההפעלה היא ל getFullName ולא ל test


/*****block 3******/


function funcB() {
	let a = b = 0;
	a++;
	return a;
}
funcB();
console.log(typeof a);
ידפיס לא הוגדר כי אי גישה ל a מחוץ לפונקציה וככה מתקנים
  console.log(typeof funcB());
console.log(typeof b);
כאן ידפיס אפס כי b נחשב ככה b=0 


/*****block 4******/
function funcC() {
    console.log("1");
}
funcC();
function funcC() {
    console.log("2");
}
funcC();
יודפס פעמיים 2 כי לוקח את הגירסה האחרונה אפשר לתקן את זה ככה



/*****block 5******/

function funcD1() {
d = 1;
}
funcD1();
console.log(d);
function funcD2() {
var e = 1;
}
funcD2();
console.log(e);

בפונקציה D1 יודפס 1 ואז ב D2 יתן שגיאה של לא מוגדר אפשר לתקן בכך שנרשום e=1 זאת אומרת משתנה גלובלי




/*****block 6******/


function funcE() {
console.log("Value of f in local scope: ", f);
}
console.log("Value of f in global scope: ", f);
var f = 1;
funcE();

יודפס קודם לא מוגדר ואחר כך יופס 1 תיקון 
function funcE() {
    console.log("Value of f in local scope: ", f);
    }
    var f = 1;
    console.log("Value of f in global scope: ", f);
    
    funcE();